{"version":3,"sources":["database.png","components/News_Item.js","components/News_Group_Wrapper.js","components/Search_Engine_Source.js","components/Search_Engine_Date.js","components/Search_Engine_Keyword.js","components/Search_Engine.js","components/HomeTabWrapper.js","components/Search_Engine_Source_SubscribingForm.js","components/SubscribingForm.js","components/SubscribeSucceed.js","components/SubscribeFail.js","components/SubscribingTabWrapper.js","components/AdminTabWrapper.js","components/Mother_Wrapper.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","NewsItem","props","article","link","date","title","keywordList","keywordDiv","className","join","style","textAlign","href","target","rel","length","substr","NewsGroupWrapper","state","this","newsIsLoading","newsList","source","sourceLink","listOfNews","keywordValue","keywordSearchMode","map","n","i","key","size","margin","color","loading","Component","SearchEngineSource","handleSourceCheckAll","handleSourceChange","sourceCheckAll","sourceValue","sourceIndeterminate","allSource","Row","Col","xs","Checkbox","checked","onChange","indeterminate","id","label","value","CheckboxGroup","inline","name","SearchEngineDate","handleDateChange","dateSpecified","dateValue","marginTop","DateRangePicker","appearance","placeholder","width","styles","radioGroupLabel","padding","display","verticalAlign","inputForExtraKeyword","marginBottom","SearchEngineKeyword","handleKeywordCheckAll","handleKeywordChange","handleKeywordSearchModeChange","handleAddKeyword","keywordCheckAll","keywordIndeterminate","allKeyword","listOfKeyword","keywordInput","FormGroup","controlId","RadioGroup","defaultValue","keywordIsSpecified","handleKeywordIsSpecifiedChange","Radio","InputGroup","Input","v","e","Button","onClick","Icon","icon","SearchEngine","sourceAllOptions","keywordAllOptions","bind","nextValue","setState","updateSourceValue","updateDateValue","updateKeywordValue","updateKeywordMode","keyword","toLowerCase","includes","concat","updateKeywordIsSpecified","HomeTabWrapper","SearchEngineSourceSubscribingForm","sourceIsSpecified","handleSourceIsSpecifiedChange","SubscribingForm","subscriptionOption","emailInput","emailConfirmed","errMsg","subscriptionStatus","handleFormSubmit","handleNext","handleEditEmail","test","String","db","collection","doc","set","email","option","sourceList","then","history","push","formatCheck","get","exists","data","console","log","catch","error","marginLeft","Form","fontWeight","fontSize","textDecoration","alignItems","handleSubscriptionRadioChange","withRouter","marginRight","location","borderRadius","background","goBack","SubscribingTabWrapper","path","SubscribeSucceed","AdminTabWrapper","firebase","require","initializeApp","apiKey","authDomain","databaseURL","projectId","firestore","newsRef","sort","k","MotherWrapper","Date","setDate","getDate","queryUpdate","query","where","Number","orderBy","submitQueryAndRetrieveNewsList","filteredNewsList","forEach","news","textLow","str","match","search","RegExp","snapshot","dateStr","filterByKeyword","processedList","s","err","isSpecified","App","src","logo","alt","to","pathname","Boolean","window","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.a2795326.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/database.0279fb2a.png\";","import React from 'react'\n\nconst NewsItem = (props) => {\n    const { article, link, date, title, keywordList } = props\n\n\n    // if (keywordList){\n    //     console.log('yes')\n    //     console.log(keywordList)\n    //     console.log(keywordList.join(', '))\n    // } else{\n    //     console.log('no')\n    //     console.log(keywordList)\n    // }\n\n    let keywordDiv = keywordList?(\n        <div className=\"keyword-list\">\n            [ {keywordList.join(', ')} ]\n        </div>\n    ):(\n        <div>\n\n        </div>\n    )\n\n    return (\n\n        <div className='news-item-wrapper'>\n            {/* date */}\n            <div className='news-item-date'>\n                {date}\n            </div>\n\n            {/* title */}\n            {/* tag */}\n            {/* link */}\n            <div className='news-item-info'>\n                <div style={{textAlign:'left'}}>{title} <br /> {keywordDiv}</div>\n                \n                <br />\n                <a href={link} target=\"_blank\" rel=\"noopener noreferrer\"> link </a>\n                \n            </div>\n\n            {/* content */}\n            <div className='news-item-article'>\n                {   \n                    article?\n                    article.length > 500?article.substr(0,499)+'...':article:\"\"\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default NewsItem","import React, { Component } from 'react'\nimport NewsItem from './News_Item'\nimport SyncLoader from \"react-spinners/SyncLoader\";\n\nclass NewsGroupWrapper extends Component {\n\n    state = {\n\n    }\n\n    constructor(props) {\n        super(props);\n\n        // Initial state\n        this.state = {\n\n        }\n    }\n\n    componentDidMount() {\n\n    }\n\n    render() {\n\n        let { newsIsLoading, newsList, source, sourceLink, keywordValue, keywordSearchMode } = this.props;\n\n        let listOfNews = !newsIsLoading && newsList ?\n            (\n                <div className=\"news-items-wrapper\">\n                    {\n                        newsList.map((n, i) => (\n                            <NewsItem\n                                key={\"newsitem_\" + source + '_' + i}\n                                article={n.article}\n                                link={n.link}\n                                date={n.date}\n                                title={n.title}\n                                keywordList={n.keywordList}\n                            />\n                        ))\n                    }\n                </div>\n            ) : (\n                <div className=\"loading\">\n                    <SyncLoader\n                        size={15}\n                        margin={2}\n                        color={\"#36D7B7\"}\n                        loading={this.state.loading}\n                    />\n                </div>\n\n            );\n\n        return (\n            <div className=\"news-mother-cell\">\n\n                <div className=\"wrapper\">\n\n                    {/* source */}\n                    <div className=\"source\">\n                        <a href={sourceLink} target=\"_blank\">\n                            <h3>{source}</h3>\n                        </a>\n                    </div>\n\n                    {listOfNews}\n\n                </div>\n\n            </div>\n        )\n\n    }\n}\n\nexport default NewsGroupWrapper","import React from 'react'\nimport { Checkbox, CheckboxGroup, Row, Col } from 'rsuite';\n\nconst SearchEngineSource = (props) => {\n    const { handleSourceCheckAll, handleSourceChange,\n        sourceCheckAll, sourceValue, sourceIndeterminate, allSource } = props\n\n    return (\n        <Row className=\"field source\">\n            <Col xs={3} className=\"name\" >\n                <span>Source:</span>\n            </Col>\n\n            <Col xs={21} className=\"input\" >\n                \n                <Checkbox\n                    checked={sourceCheckAll}\n                    onChange={handleSourceCheckAll}\n                    indeterminate={sourceIndeterminate}\n                    id=\"checkbox_source_ALL\"\n                    label=\"ALL\"\n                    value=\"ALL\">ALL</Checkbox>\n\n                <CheckboxGroup\n                    inline\n                    name=\"checkboxList\"\n                    value={sourceValue}\n                    onChange={handleSourceChange}\n                >\n\n                    {\n                        allSource.map((n, i) => (\n                            <Checkbox key={\"source_\" + i} value={n}>{n}</Checkbox>\n                        ))\n                    }\n\n                </CheckboxGroup>\n\n            </Col>\n\n        </Row>\n    )\n}\n\nexport default SearchEngineSource ","import React from 'react'\nimport { DateRangePicker, Row, Col } from 'rsuite';\n\nconst SearchEngineDate = (props) => {\n    const { handleDateChange, dateSpecified, dateValue } = props\n\n    return (\n        <Row className=\"field date\" style={{marginTop:'20px'}}>\n            <Col xs={3} className=\"name\" >\n                <span>Date:</span>\n            </Col>\n\n            <Col xs={21} className=\"input\" >\n\n                {dateSpecified && dateValue.length?\n                    (\n                        <DateRangePicker\n                            value={dateValue}\n                            appearance=\"default\"\n                            placeholder=\"to specify a period ...\"\n                            style={{ width: 280 }}\n                            onChange={handleDateChange}\n                        />\n                    ) : (\n                        <DateRangePicker\n\n                            appearance=\"default\"\n                            placeholder=\"to specify a period ...\"\n                            style={{ width: 280 }}\n                            onChange={handleDateChange}\n                        />\n                    )}\n            </Col>\n        </Row>\n    )\n}\n\nexport default SearchEngineDate\n\n\n\n// constructor(props) {\n//     super(props);\n//     this.state = {\n//         value: [new Date('2017-02-01'), new Date('2017-05-20')]\n//     };\n// }\n// render() {\n//     return (\n//         <div className=\"field\">\n//             <DateRangePicker\n//                 value={this.state.value}\n//                 onChange={value => {\n//                     this.setState({ value });\n//                     console.log(value);\n//                 }}\n//             />\n//         </div>\n//     );\n// }","import React from 'react'\nimport { Checkbox, CheckboxGroup, Row, Col, FormGroup, RadioGroup, Radio, Input, InputGroup, Icon } from 'rsuite';\n\nconst styles = {\n    radioGroupLabel: {\n        padding: '8px 2px 8px 10px',\n        display: 'inline-block',\n        verticalAlign: 'middle'\n    },\n    inputForExtraKeyword:\n    {\n        width: 300,\n        marginBottom: 10\n    }\n};\n\nconst SearchEngineKeyword = (props) => {\n    const {\n        handleKeywordCheckAll,\n        handleKeywordChange,\n        handleKeywordSearchModeChange,\n        handleAddKeyword,\n        keywordCheckAll,\n        keywordValue,\n        keywordIndeterminate,\n        keywordSearchMode,\n        allKeyword,\n    } = props\n\n    let listOfKeyword =\n        (\n            <div>\n                {\n                    allKeyword.map((n, i) => (\n                        <Checkbox key={'keyword_' + i} value={n}>{n}</Checkbox>\n                    ))\n                }\n            </div>\n\n        );\n\n    let keywordInput = ''\n\n    return (\n        <Row className=\"field keyword\">\n            <Col xs={3} className=\"name\" >\n                <span>Keyword:</span>\n            </Col>\n\n            <Col xs={21} className=\"input\" >\n\n                <FormGroup controlId=\"add_input_form\">\n\n                    <RadioGroup name=\"subscriptionRadioList\" inline\n                        defaultValue={props.keywordIsSpecified}\n                        onChange={value => {\n                            props.handleKeywordIsSpecifiedChange(value)\n                        }}>\n                        <Radio value={true}>Specified</Radio>\n                        <Radio value={false}>Not specified</Radio>\n                    </RadioGroup>\n\n                    {props.keywordIsSpecified\n                        ?\n                        <div>\n\n                            <div style={{ 'display': 'flex' }}>\n\n                                <RadioGroup\n                                    name=\"keywordSearchMode\"\n                                    inline appearance=\"picker\"\n                                    value={keywordSearchMode}\n                                    onChange={value => {\n                                        handleKeywordSearchModeChange('keywordSearchMode', value);\n                                    }}\n                                >\n                                    <Radio value=\"OR\" >OR</Radio>\n                                    <Radio value=\"AND\">AND</Radio>\n                                </RadioGroup>\n\n                                <Checkbox\n                                    checked={keywordCheckAll}\n                                    onChange={handleKeywordCheckAll}\n                                    indeterminate={keywordIndeterminate}\n                                    id=\"checkbox_keyword_ALL\"\n                                    label=\"ALL\"\n                                    value=\"ALL\">ALL</Checkbox>\n                            </div>\n\n                            <div className=\"keyword-checkbox-group\">\n\n                                <CheckboxGroup\n                                    inline\n                                    name=\"checkboxList\"\n                                    value={keywordValue}\n                                    onChange={handleKeywordChange}\n                                >\n                                    <div></div>\n\n                                    {listOfKeyword}\n\n                                </CheckboxGroup>\n\n                            </div>\n\n                            <InputGroup\n                                style={styles.inputForExtraKeyword}\n                            >\n                                <Input\n                                    placeholder='to add a keyword ...'\n                                    onChange={\n                                        (v, e) => {\n                                            keywordInput = v\n                                        }\n                                    }\n                                />\n                                <InputGroup.Button\n                                    onClick={\n                                        () => {\n                                            handleAddKeyword(keywordInput)\n                                            keywordInput = \"\"\n                                        }\n                                    }>\n                                    <Icon icon=\"plus-square\" />\n                                </InputGroup.Button>\n\n                            </InputGroup>\n                        </div>\n                        : null}\n\n                </FormGroup>\n\n\n            </Col>\n        </Row>\n    )\n}\n\nexport default SearchEngineKeyword","import React, { Component } from 'react'\n// import { Row, Col} from 'react-materialize';\nimport 'rsuite/dist/styles/rsuite-dark.css'\nimport SearchEngineSource from './Search_Engine_Source'\nimport SearchEngineDate from './Search_Engine_Date'\nimport SearchEngineKeyword from './Search_Engine_Keyword'\n\nclass SearchEngine extends Component {\n\n    state = {\n    }\n\n    constructor(props) {\n        super(props);\n\n        // Initial state\n        this.state = {\n            sourceCheckAll: false,\n            sourceIndeterminate: true,\n            sourceValue: props.sourceValue, //default\n            sourceAllOptions: props.sourceAllOptions,\n\n            dateSpecified: props.dateSpecified, //default\n            dateValue: props.dateValue, //default\n\n            keywordIsSpecified: props.keywordIsSpecified, //default\n            keywordCheckAll: false,\n            keywordIndeterminate: true,\n            keywordValue: props.keywordValue, //default\n            keywordSearchMode: 'OR',\n            keywordAllOptions: props.keywordAllOptions\n        };\n        this.handleSourceCheckAll = this.handleSourceCheckAll.bind(this);\n        this.handleSourceChange = this.handleSourceChange.bind(this);\n        this.handleDateChange = this.handleDateChange.bind(this);\n        this.handleKeywordCheckAll = this.handleKeywordCheckAll.bind(this);\n        this.handleKeywordChange = this.handleKeywordChange.bind(this);\n        this.handleKeywordSearchModeChange = this.handleKeywordSearchModeChange.bind(this);\n        this.handleAddKeyword = this.handleAddKeyword.bind(this);\n        this.handleKeywordIsSpecifiedChange = this.handleKeywordIsSpecifiedChange.bind(this);\n\n    }\n\n    componentDidMount() {\n\n    }\n\n    handleSourceCheckAll(value, checked) {\n        const nextValue = checked ? this.state.sourceAllOptions : [];\n\n        this.setState({\n            sourceValue: nextValue,\n            sourceIndeterminate: false,\n            sourceCheckAll: checked\n        });\n\n        this.props.updateSourceValue(nextValue);\n    }\n\n    handleSourceChange(value) {\n        this.setState({\n            sourceValue: value,\n            sourceIndeterminate: value.length > 0 && value.length < this.state.sourceAllOptions.length,\n            sourceCheckAll: value.length == this.state.sourceAllOptions.length\n        });\n\n        this.props.updateSourceValue(value);\n    }\n\n    handleDateChange(value) {\n        if (value.length != 0) {\n            this.setState({\n                dateSpecified: true,\n                dateValue: value\n            });\n            this.props.updateDateValue(value, true);\n        } else {\n            this.setState({\n                dateSpecified: false,\n                dateValue: '',\n            });\n            this.props.updateDateValue(value, false);\n        }\n    }\n\n    handleKeywordCheckAll(value, checked) {\n        const nextValue = checked ? this.state.keywordAllOptions : [];\n        this.setState({\n            keywordValue: nextValue,\n            keywordIndeterminate: false,\n            keywordCheckAll: checked\n        });\n\n        this.props.updateKeywordValue(nextValue);\n    }\n\n    handleKeywordChange(value) {\n        this.setState({\n            keywordValue: value,\n            keywordIndeterminate: value.length > 0 && value.length < this.state.keywordAllOptions.length,\n            keywordCheckAll: value.length == this.state.keywordAllOptions.length\n        });\n\n        this.props.updateKeywordValue(value);\n    }\n\n    handleKeywordSearchModeChange(name, value) {\n        this.setState({\n            [name]: value\n        });\n\n        this.props.updateKeywordMode(value);\n    }\n\n    handleAddKeyword(keyword) {\n        if (!keyword == '') {\n\n            keyword = keyword.toLowerCase()\n            if (!this.state.keywordAllOptions.includes(keyword)) {\n                this.setState(state => {\n                    const keywordAllOptions = state.keywordAllOptions.concat(keyword);\n                    return {\n                        keywordAllOptions\n                    };\n                });\n            }\n\n        } else {\n\n        }\n    }\n\n    handleKeywordIsSpecifiedChange(value) {\n        this.setState({\n            keywordIsSpecified: value\n        });\n        this.props.updateKeywordIsSpecified(value);\n    }\n\n    render() {\n\n        let { } = this.props;\n        const { } = this.state;\n\n\n        return (\n            <div className=\"search-engine\">\n\n                <div className=\"wrapper\">\n\n                    <SearchEngineDate\n                        handleDateChange={this.handleDateChange}\n                        dateSpecified={this.state.dateSpecified}\n                        dateValue={this.state.dateValue}\n                    />\n\n                    <SearchEngineSource\n                        handleSourceCheckAll={this.handleSourceCheckAll}\n                        handleSourceChange={this.handleSourceChange}\n                        sourceCheckAll={this.state.sourceCheckAll}\n                        sourceIndeterminate={this.state.sourceIndeterminate}\n                        sourceValue={this.state.sourceValue}\n                        allSource={this.state.sourceAllOptions}\n                    />\n\n                    <SearchEngineKeyword\n                        handleKeywordCheckAll={this.handleKeywordCheckAll}\n                        handleKeywordChange={this.handleKeywordChange}\n                        handleKeywordSearchModeChange={this.handleKeywordSearchModeChange}\n                        handleAddKeyword={this.handleAddKeyword}\n                        keywordCheckAll={this.state.keywordCheckAll}\n                        keywordIndeterminate={this.state.keywordIndeterminate}\n                        keywordValue={this.state.keywordValue}\n                        keywordSearchMode={this.state.keywordSearchMode}\n                        allKeyword={this.state.keywordAllOptions}\n\n                        keywordIsSpecified={this.state.keywordIsSpecified}\n                        handleKeywordIsSpecifiedChange={this.handleKeywordIsSpecifiedChange}\n                    />\n\n\n                </div>\n\n            </div>\n        )\n\n    }\n}\n\nexport default SearchEngine","import React from 'react'\nimport Announcement from './Announcement'\nimport SearchEngine from './Search_Engine'\nimport NewsGroupWrapper from './News_Group_Wrapper'\n\nconst HomeTabWrapper = (props) => {\n\n    return (\n        <div>\n            \n            {/* <Announcement /> */}\n\n\n            <SearchEngine\n                updateSourceValue={props.updateSourceValue}\n                updateDateValue={props.updateDateValue}\n                updateKeywordValue={props.updateKeywordValue}\n                updateKeywordMode={props.updateKeywordMode}\n                updateKeywordIsSpecified={props.updateKeywordIsSpecified}\n\n                sourceValue={props.sourceValue}\n                sourceAllOptions={props.sourceAllOptions}\n\n                keywordIsSpecified={props.keywordIsSpecified}\n                keywordValue={props.keywordValue}\n                keywordAllOptions={props.keywordAllOptions}\n\n                dateValue={props.dateValue}\n                dateSpecified={props.dateSpecified}\n            />\n\n            {\n                props.sourceValue.map((n, i) => (\n                    <NewsGroupWrapper\n                        key={'newsGroupWrapper_' + i}\n                        newsIsLoading={props.newsIsLoading}\n                        source={n}\n                        sourceLink={props.sourceLink[n]}\n                        keywordValue={props.keywordValue}\n                        keywordSearchMode={props.keywordSearchMode}\n\n                        newsList={props.newsList[n]}\n                    />\n\n                ))\n            }\n\n        </div>\n    )\n}\n\nexport default HomeTabWrapper","import React from 'react'\r\nimport { Checkbox, CheckboxGroup, Row, Col, FormGroup, RadioGroup, Radio } from 'rsuite';\r\n\r\nconst styles = {\r\n    radioGroupLabel: {\r\n        padding: '8px 2px 8px 10px',\r\n        display: 'inline-block',\r\n        verticalAlign: 'middle'\r\n    }\r\n};\r\n\r\n\r\nconst SearchEngineSourceSubscribingForm = (props) => {\r\n    const { handleSourceCheckAll, handleSourceChange,\r\n        sourceCheckAll, sourceValue, sourceIndeterminate, allSource } = props\r\n\r\n    return (\r\n        <Row className=\"field source\">\r\n            <Col xs={3} className=\"name\" >\r\n                <span>Source:</span>\r\n            </Col>\r\n\r\n            <Col xs={21} className=\"input\" >\r\n                <FormGroup>\r\n\r\n                    <RadioGroup name=\"subscriptionRadioList\" inline\r\n                        defaultValue={props.sourceIsSpecified}\r\n                        onChange={value => {\r\n                            props.handleSourceIsSpecifiedChange(value)\r\n                        }}>\r\n                        <Radio value={true}>Specified</Radio>\r\n                        <Radio value={false}>Not specified</Radio>\r\n                    </RadioGroup>\r\n\r\n                    {props.sourceIsSpecified ?\r\n                        <div>\r\n                            <Checkbox\r\n                                checked={sourceCheckAll}\r\n                                onChange={handleSourceCheckAll}\r\n                                indeterminate={sourceIndeterminate}\r\n                                id=\"checkbox_source_ALL\"\r\n                                label=\"ALL\"\r\n                                value=\"ALL\">ALL</Checkbox>\r\n                            <CheckboxGroup\r\n                                inline\r\n                                name=\"checkboxList\"\r\n                                value={sourceValue}\r\n                                onChange={handleSourceChange}\r\n                            >\r\n\r\n                                {\r\n                                    allSource.map((n, i) => (\r\n                                        <Checkbox key={\"source_\" + i} value={n}>{n}</Checkbox>\r\n                                    ))\r\n                                }\r\n\r\n                            </CheckboxGroup>\r\n                        </div>\r\n                        : null}\r\n\r\n\r\n                </FormGroup>\r\n\r\n\r\n            </Col>\r\n\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default SearchEngineSourceSubscribingForm ","import React, { Component } from 'react'\n// import { Row, Col} from 'react-materialize';\nimport 'rsuite/dist/styles/rsuite-dark.css'\nimport SearchEngineSource from './Search_Engine_Source'\nimport SearchEngineDate from './Search_Engine_Date'\nimport SearchEngineKeyword from './Search_Engine_Keyword'\nimport SearchEngineSourceSubscribingForm from './Search_Engine_Source_SubscribingForm'\nimport { Schema, Checkbox, CheckboxGroup, Row, Col, Form, FormGroup, RadioGroup, Radio, Input, InputGroup, Icon, ButtonToolbar, Button } from 'rsuite';\nimport { withRouter, } from 'react-router-dom'\n\n\nclass SubscribingForm extends Component {\n\n    state = {\n    }\n\n    constructor(props) {\n        super(props);\n\n        // Initial state\n        this.state = {\n            subscriptionOption: \"Subscribe\",\n            emailInput: \"\",\n            emailConfirmed: false,\n            sourceCheckAll: false,\n            sourceIndeterminate: true,\n            sourceValue: props.sourceValue, //default\n            sourceAllOptions: props.sourceAllOptions,\n            sourceIsSpecified: props.sourceIsSpecified, //default\n\n            keywordIsSpecified: props.keywordIsSpecified, //default\n            keywordCheckAll: false,\n            keywordIndeterminate: true,\n            keywordValue: props.keywordValue, //default\n            keywordSearchMode: 'OR',\n            keywordAllOptions: props.keywordAllOptions,\n\n            errMsg: \"\",\n            subscriptionStatus: false\n        };\n        this.handleSourceCheckAll = this.handleSourceCheckAll.bind(this);\n        this.handleSourceChange = this.handleSourceChange.bind(this);\n        this.handleKeywordCheckAll = this.handleKeywordCheckAll.bind(this);\n        this.handleKeywordChange = this.handleKeywordChange.bind(this);\n        this.handleKeywordSearchModeChange = this.handleKeywordSearchModeChange.bind(this);\n        this.handleAddKeyword = this.handleAddKeyword.bind(this);\n        this.handleFormSubmit = this.handleFormSubmit.bind(this);\n        this.handleNext = this.handleNext.bind(this);\n        this.handleEditEmail = this.handleEditEmail.bind(this);\n        this.handleKeywordIsSpecifiedChange = this.handleKeywordIsSpecifiedChange.bind(this);\n        this.handleSourceIsSpecifiedChange = this.handleSourceIsSpecifiedChange.bind(this);\n    }\n\n    componentDidMount() {\n\n    }\n\n    handleSourceCheckAll(value, checked) {\n        const nextValue = checked ? this.state.sourceAllOptions : [];\n\n        this.setState({\n            sourceValue: nextValue,\n            sourceIndeterminate: false,\n            sourceCheckAll: checked\n        });\n\n\n    }\n\n    handleSourceChange(value) {\n        this.setState({\n            sourceValue: value,\n            sourceIndeterminate: value.length > 0 && value.length < this.state.sourceAllOptions.length,\n            sourceCheckAll: value.length == this.state.sourceAllOptions.length\n        });\n\n    }\n\n    handleKeywordCheckAll(value, checked) {\n        const nextValue = checked ? this.state.keywordAllOptions : [];\n        this.setState({\n            keywordValue: nextValue,\n            keywordIndeterminate: false,\n            keywordCheckAll: checked\n        });\n\n    }\n\n    handleKeywordChange(value) {\n        this.setState({\n            keywordValue: value,\n            keywordIndeterminate: value.length > 0 && value.length < this.state.keywordAllOptions.length,\n            keywordCheckAll: value.length == this.state.keywordAllOptions.length\n        });\n\n    }\n\n    handleKeywordSearchModeChange(name, value) {\n        this.setState({\n            [name]: value\n        });\n    }\n\n    handleAddKeyword(keyword) {\n        if (!keyword == '') {\n\n            keyword = keyword.toLowerCase()\n            if (!this.state.keywordAllOptions.includes(keyword)) {\n                this.setState(state => {\n                    const keywordAllOptions = state.keywordAllOptions.concat(keyword);\n                    return {\n                        keywordAllOptions\n                    };\n                });\n            }\n\n        } else {\n\n        }\n    }\n\n    handleSubscriptionRadioChange(value) {\n        this.setState({\n            subscriptionOption: value,\n        });\n    }\n\n    handleFormSubmit() {\n        if (this.state.emailInput != \"\") {\n            var re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n            var formatCheck = re.test(String(this.state.emailInput).toLowerCase());\n\n            if (formatCheck) {\n                var subscriptionRef = this.props.db.collection('subscriptions').doc(this.state.emailInput);\n                var set = subscriptionRef.set({\n                    email: this.state.emailInput,\n                    option: this.state.subscriptionOption,\n                    keywordSearchMode: this.state.keywordSearchMode,\n                    keywordList: this.state.keywordValue,\n                    keywordIsSpecified: this.state.keywordIsSpecified,\n                    sourceIsSpecified: this.state.sourceIsSpecified,\n                    sourceList: this.state.sourceValue,\n                }).then(() => {\n                    this.props.history.push('/subscribe/succeed',\n                        {\n                            email: this.state.emailInput,\n                            option: this.state.subscriptionOption,\n                            keywordSearchMode: this.state.keywordSearchMode,\n                            keywordList: this.state.keywordValue,\n                            keywordIsSpecified: this.state.keywordIsSpecified,\n                            sourceIsSpecified: this.state.sourceIsSpecified,\n                            sourceList: this.state.sourceValue\n                        });\n                })\n            } else {\n                this.props.history.push('/subscribe/fail', { email: this.state.emailInput });\n            }\n        } else {\n            this.props.history.push('/subscribe/fail', { email: this.state.emailInput });\n        }\n\n    }\n\n    handleNext() {\n        if (this.state.emailInput != \"\") {\n            var re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n            var formatCheck = re.test(String(this.state.emailInput).toLowerCase());\n            var subscriptionStatus = false\n\n            if (formatCheck) {\n\n                this.props.db.collection('subscriptions').doc(this.state.emailInput).get().then(function (doc) {\n\n                    if (doc.exists) {\n                        if (doc.data()['option'] == 'Subscribe') {\n                            // opted in before\n                            console.log('already subscribed')\n                            subscriptionStatus = true\n                        }\n                    }\n                }).catch(function (error) {\n                    console.log(\"Error getting document:\", error);\n                }).then(() => {\n                    this.setState({\n                        errMsg: \"\",\n                        subscriptionStatus: subscriptionStatus,\n                        emailConfirmed: true\n                    })\n                })\n\n            } else {\n                // wrong email format\n                this.setState({\n                    errMsg: \"Please provide a correct email address.\"\n                })\n            }\n        } else {\n            // didnt provide email\n            this.setState({\n                errMsg: \"Please provide your email address.\"\n            })\n        }\n    }\n\n    handleEditEmail() {\n        this.setState({\n            emailConfirmed: false,\n            emailInput: \"\"\n        })\n    }\n\n    handleKeywordIsSpecifiedChange(value) {\n        this.setState({\n            keywordIsSpecified: value\n        });\n    }\n\n    handleSourceIsSpecifiedChange(value) {\n        this.setState({\n            sourceIsSpecified: value\n        });\n    }\n\n\n    render() {\n\n        let { } = this.props;\n        const { } = this.state;\n\n        const styles = {\n            radioGroupLabel: {\n                padding: '8px 2px 8px 10px',\n                display: 'inline-block',\n                verticalAlign: 'middle'\n            },\n            inputForExtraKeyword:\n            {\n                width: 300,\n                marginBottom: 10\n            }\n        };\n\n\n        return (\n            <div className=\"search-engine\">\n\n                <div className=\"wrapper\">\n\n                    {this.state.errMsg != \"\"\n                        ? <h4 style={{ textAlign: 'left', marginLeft: '50px', color: 'red' }}>{this.state.errMsg}</h4>\n                        : null}\n\n                    <Form>\n\n                        {/* for email input */}\n                        <Row className=\"field\" style={{ marginTop: '15px' }}>\n                            <Col xs={3} className=\"name\" >\n                                <span>Email:</span>\n                            </Col>\n\n                            <Col xs={21} className=\"input\">\n\n                                {\n                                    !this.state.emailConfirmed\n                                        ?\n                                        <InputGroup\n                                            style={{ display: 'inline-flex', ...styles.inputForExtraKeyword }}\n                                        >\n\n\n                                            <Input\n                                                placeholder='email address'\n                                                onChange={\n                                                    (v, e) => {\n                                                        this.setState({\n                                                            emailInput: v,\n                                                        });\n                                                    }\n                                                }\n                                            />\n\n                                        </InputGroup>\n                                        : null\n                                }\n                                {\n                                    this.state.emailConfirmed\n                                        ?\n                                        <span style={{ fontWeight: '600', fontSize: '16px', textDecoration: 'underline' }}>{this.state.emailInput}</span>\n                                        : null\n                                }\n\n\n                                {/* next button */}\n                                {\n                                    !this.state.emailConfirmed\n                                        ?\n                                        <Button appearance=\"primary\" onClick={this.handleNext}>Next</Button>\n                                        : null\n                                }\n\n                                {/* edit button */}\n                                {\n                                    this.state.emailConfirmed\n                                        ?\n                                        <Button appearance=\"primary\" onClick={this.handleEditEmail}>edit</Button>\n                                        : null\n                                }\n\n                            </Col>\n                        </Row>\n\n                        {/* Status */}\n                        {\n                            this.state.emailConfirmed ?\n                                // subscription status\n                                <Row className=\"field\" style={{ marginTop: '15px' }}>\n                                    <Col xs={3} className=\"name\" >\n                                        <span>Status:</span>\n                                    </Col>\n\n                                    <Col xs={21} className=\"input\" style={{ display: 'flex', alignItems: 'center' }}>\n                                        <div style={{ fontWeight: '600', fontSize: '16px' }}>\n                                            {this.state.subscriptionStatus ? \"Subscribed\" : \"Have not subscribed\"}\n                                        </div>\n                                    </Col>\n                                </Row>\n                                : null\n                        }\n\n                        {/* subscription option */}\n                        {\n                            this.state.emailConfirmed\n                                ?\n                                <Row className=\"field\">\n                                    <Col xs={3} className=\"name\" >\n                                        <span>Action:</span>\n                                    </Col>\n\n                                    <Col xs={21} className=\"input\" >\n\n                                        <FormGroup controlId=\"subscriptionRadioList\">\n                                            <RadioGroup name=\"subscriptionRadioList\" inline\n                                                defaultValue={this.state.subscriptionOption}\n                                                onChange={value => {\n                                                    this.handleSubscriptionRadioChange(value);\n                                                }}>\n                                                <Radio value=\"Subscribe\">Subscribe</Radio>\n                                                <Radio value=\"Unsubscribe\">Unsubscribe</Radio>\n                                            </RadioGroup>\n                                        </FormGroup>\n\n                                    </Col>\n                                </Row>\n                                :\n                                null\n                        }\n\n                        {/* Source list, borrow from search engine */}\n                        {\n                            this.state.emailConfirmed && this.state.subscriptionOption == 'Subscribe' ?\n                                <SearchEngineSourceSubscribingForm\n                                    handleSourceCheckAll={this.handleSourceCheckAll}\n                                    handleSourceChange={this.handleSourceChange}\n                                    sourceCheckAll={this.state.sourceCheckAll}\n                                    sourceIndeterminate={this.state.sourceIndeterminate}\n                                    sourceValue={this.state.sourceValue}\n                                    allSource={this.state.sourceAllOptions}\n                                    sourceIsSpecified={this.state.sourceIsSpecified}\n                                    handleSourceIsSpecifiedChange={this.handleSourceIsSpecifiedChange}\n                                /> : null\n                        }\n\n                        {/* Keyword list, borrow from search engine */}\n\n                        {\n                            this.state.emailConfirmed && this.state.subscriptionOption == 'Subscribe' ?\n                                <SearchEngineKeyword\n                                    handleKeywordCheckAll={this.handleKeywordCheckAll}\n                                    handleKeywordChange={this.handleKeywordChange}\n                                    handleKeywordSearchModeChange={this.handleKeywordSearchModeChange}\n                                    handleAddKeyword={this.handleAddKeyword}\n                                    keywordCheckAll={this.state.keywordCheckAll}\n                                    keywordIndeterminate={this.state.keywordIndeterminate}\n                                    keywordValue={this.state.keywordValue}\n                                    keywordSearchMode={this.state.keywordSearchMode}\n                                    allKeyword={this.state.keywordAllOptions}\n\n                                    keywordIsSpecified={this.state.keywordIsSpecified}\n                                    handleKeywordIsSpecifiedChange={this.handleKeywordIsSpecifiedChange}\n                                /> : null\n                        }\n\n                        {/* submit button */}\n                        {\n                            this.state.emailConfirmed\n                                ?\n                                <Row className=\"field\">\n                                    <Col xs={3} >\n                                    </Col>\n\n                                    <Col xs={21} className=\"input\" >\n                                        <Button appearance=\"primary\" onClick={this.handleFormSubmit}>Update</Button>\n                                    </Col>\n                                </Row>\n                                :\n                                null\n                        }\n\n                    </Form>\n\n                </div>\n\n            </div>\n        )\n\n    }\n}\n\nexport default withRouter(SubscribingForm);","import React from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { Icon } from 'rsuite'\nimport { Row, Col, Form } from 'rsuite';\n\nconst SubscribeSuccessed = (props) => {\n    return (\n        <div>\n\n            <Form>\n                <div style={{ textAlign: \"left\", marginLeft: '60px' }}>\n                    <Icon icon='check-circle' style={{ color: 'green', marginRight: '10px' }} />\n                    Subscription details listed below\n                </div>\n\n                <Row className=\"field\" style={{ marginTop: '15px' }}>\n                    <Col xs={3} className=\"name\" >\n                        <span>Email:</span>\n                    </Col>\n\n                    <Col xs={21} className=\"input\" style={{ display: 'flex', alignItems: 'center' }}>\n                        <span style={{ fontWeight: '600', fontSize: '16px' }}>\n                            {props.location.state.email}\n                        </span>\n                    </Col>\n                </Row>\n\n                <Row className=\"field\" style={{ marginTop: '15px' }}>\n                    <Col xs={3} className=\"name\" >\n                        <span>Status:</span>\n                    </Col>\n\n                    <Col xs={21} className=\"input\" style={{ display: 'flex', alignItems: 'center' }}>\n                        <span style={{ fontWeight: '600', fontSize: '16px' }}>\n                            {props.location.state.option}\n                        </span>\n                    </Col>\n                </Row>\n\n\n                {\n                    props.location.state.option == \"Subscribe\"\n                        ? (\n                            <div>\n                                <Row className=\"field\" style={{ marginTop: '15px' }}>\n                                    <Col xs={3} className=\"name\" >\n                                        <span>Source:</span>\n                                    </Col>\n\n                                    <Col xs={21} className=\"input\" style={{ display: 'flex', alignItems: 'center' }}>\n                                        <span style={{ fontWeight: '600', fontSize: '16px', textAlign: 'left' }}>\n                                            {props.location.state.sourceIsSpecified\n                                                ? props.location.state.sourceList.join(\", \")\n                                                : \"Not Specified\"}\n                                        </span>\n                                    </Col>\n                                </Row>\n\n                                <Row className=\"field\" style={{ marginTop: '15px' }}>\n                                    <Col xs={3} className=\"name\" >\n                                        <span>Keyword:</span>\n                                    </Col>\n\n                                    <Col xs={21} className=\"input\" style={{ display: 'flex', alignItems: 'center' }}>\n                                        <span style={{ fontWeight: '600', fontSize: '16px', textAlign: 'left' }}>\n                                            {props.location.state.keywordIsSpecified\n                                                ? props.location.state.keywordList.join(\", \")\n                                                : \"Not Specified\"}\n                                        </span>\n                                    </Col>\n                                </Row>\n\n                                {\n                                    props.location.state.keywordIsSpecified\n                                        ?\n                                        <Row className=\"field\" style={{ marginTop: '15px' }}>\n                                            <Col xs={3} className=\"name\" >\n                                                <span>Search Mode:</span>\n                                            </Col>\n\n                                            <Col xs={21} className=\"input\" style={{ display: 'flex', alignItems: 'center' }}>\n                                                <span style={{ fontWeight: '600', fontSize: '16px' }}>\n                                                    {props.location.state.keywordSearchMode}\n                                                </span>\n                                            </Col>\n                                        </Row>\n                                        : null\n                                }\n\n                                <Row className=\"field\" style={{ marginTop: '15px' }}>\n                                    <Col xs={1} className=\"name\" >\n                                              \n                                    </Col>\n                                    \n                                    <Col xs={23} className=\"input\" style={{ display: 'flex', alignItems: 'center' }}>\n                                        <div>\n                                            <h5 style={{textAlign:'left'}}>\n                                                - Contents of this web app will be updated everyday at 08:00 HKT\n                                            </h5>\n\n                                            <h5 style={{textAlign:'left'}}>\n                                                - You will receive an email listing out news that match your subscription options at 09:15 HKT ( if there are any )\n                                            </h5>\n                                        </div>\n                                    </Col>\n                                </Row>\n                            </div>\n                        )\n                        : null\n                }\n\n                <div style={{ marginTop: '20px' }}>\n                    <button\n                        style={{ borderRadius: '5%', background: 'grey', color: 'white' }}\n                        onClick={\n                            () => {\n                                props.history.push('/')\n                            }\n                        }>\n                        Back to home\n                    </button>\n                </div>\n\n            </Form>\n\n\n\n\n\n        </div>\n    )\n}\n\nexport default withRouter(SubscribeSuccessed)","import React from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { Icon } from 'rsuite'\n\n// this component is not used\nconst SubscribeFail = (props) => {\n    let goBack = () => {\n        props.history.goBack();\n    }\n\n    return (\n        <div>\n            \n            \n            <div style={{ textAlign: \"centre\" }}>\n                <Icon icon='close-circle' style={{ color: 'red', marginRight: '10px' }} />\n                You did not provide or provided a wrong email address:\n            </div>\n\n            <h4>\n                {props.location.state.email}\n            </h4>\n            <div style={{marginTop:'20px'}}>\n                <button style={{borderRadius:'5%', background:'grey', color:'white'}} onClick={goBack}>Go Back</button>\n            </div>\n\n        </div>\n    )\n}\n\nexport default withRouter(SubscribeFail)","import React from 'react'\nimport SearchEngine from './Search_Engine'\nimport SubscribingForm from './SubscribingForm'\nimport SubscribeSucceed from './SubscribeSucceed'\nimport SubscribeFail from './SubscribeFail'\n\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link\n} from \"react-router-dom\";\n\nconst SubscribingTabWrapper = (props) => {\n    const { } = props\n\n    return (\n\n        <div>\n\n            <Switch>\n\n                <Route path=\"/subscribe/fail\">\n                    <SubscribeFail />\n                </Route>\n\n                <Route path=\"/subscribe/succeed\">\n                    <SubscribeSucceed />\n                </Route>\n\n                <Route path=\"/subscribe\">\n                    <SubscribingForm\n                        sourceAllOptions={props.sourceAllOptions}\n                        keywordAllOptions={props.keywordAllOptions}\n                        keywordIsSpecified={props.keywordIsSpecified}\n                        sourceIsSpecified={true}\n                        sourceValue={props.sourceValue}\n                        keywordValue={props.keywordValue}\n                        \n\n                        db={props.db}\n                    />\n                </Route>\n\n            </Switch>\n\n        </div>\n    )\n}\n\nexport default SubscribingTabWrapper","import React from 'react'\n\n\nconst AdminTabWrapper = (props) => {\n    const { } = props\n    return (\n\n        <div>\n\n            admin\n\n        </div>\n    )\n}\n\nexport default AdminTabWrapper","import React, { Component } from 'react'\nimport NewsGroupWrapper from './News_Group_Wrapper'\nimport SearchEngine from './Search_Engine'\nimport Announcement from './Announcement'\nimport HomeTabWrapper from './HomeTabWrapper'\nimport SubscribingTabWrapper from './SubscribingTabWrapper'\nimport AdminTabWrapper from './AdminTabWrapper'\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link\n} from \"react-router-dom\";\n\nvar dateFormat = require('dateformat');\n\n// const firebase = require(\"firebase\");\nconst firebase = require('firebase/app');\nrequire('firebase/firestore');\n\nfirebase.initializeApp({\n    apiKey: \"AIzaSyAXi_X5zUczfBRS4N2Jgh1fuiF29b9_r2U\",\n    authDomain: \"fintech-scraping.firebaseapp.com\",\n    databaseURL: \"https://fintech-scraping.firebaseio.com\",\n    projectId: \"fintech-scraping\",\n});\n\nvar db = firebase.firestore();\nlet newsRef = db.collection('news');\n// let newsRef = db.collection('newNews'); // for testing\n\n// ******************* Set news source and keyword *******************\nlet sourceAllOptions = ['BIS', 'FCA', 'MAS'].sort()\nlet sourceLink = {\n    'BIS': 'https://www.bis.org/list/press_releases/',\n    'FCA': 'https://www.fca.org.uk/news/search-results',\n    'MAS': 'https://www.mas.gov.sg/news'\n}\nlet keywordAllOptions =\n    [\n        'api', 'ai',\n        'fintech', 'fin tech', 'big data',\n        'data', 'data connectivity', 'data centre',\n        'data center', '5g', 'cbdc', 'technology', 'artificial intelligence',\n        'digital', 'blockchain', 'block chain', 'colocation', 'co location',\n        'regtech', 'suptech', 'reg tech', 'sup tech', 'open api', 'open-api', 'open banking'\n    ].sort()\n\n// *******************************************************************\nkeywordAllOptions = keywordAllOptions.map(k => { return k.toLowerCase() })\n\n// ********************  Global function  ***************************\n\nfunction findWord(word, str) {\n    return RegExp('\\\\b' + word + '\\\\b').test(str)\n}\n\nclass MotherWrapper extends Component {\n\n    state = {\n    }\n\n    constructor(props) {\n        super(props);\n        // Initial state\n        this.state = {\n            sourceAllOptions: sourceAllOptions,\n            keywordAllOptions: keywordAllOptions,\n            newsList: {},\n            newsIsLoading: true,\n\n            // ******************* Config search engine default  *******************\n            sourceValue: ['BIS', 'FCA', 'MAS'], // default\n            sourceLink: sourceLink,\n            dateSpecified: true, // default\n            dateValue: [new Date(new Date().setDate(new Date().getDate() - 14)), new Date()], // default\n\n            keywordIsSpecified: true, //default\n            keywordValue: [\n                'big data', 'data connectivity', 'data centre',\n                'data center', '5g', 'cbdc', 'technology', 'digital',\n                'regtech', 'suptech', 'reg tech', 'sup tech',\n                'open api', 'open-api', 'open banking'], // default\n            keywordSearchMode: 'OR',\n\n            // *******************************************************************\n\n        };\n\n        this.updateSourceValue = this.updateSourceValue.bind(this);\n        this.updateDateValue = this.updateDateValue.bind(this);\n        this.updateKeywordValue = this.updateKeywordValue.bind(this);\n        this.updateKeywordMode = this.updateKeywordMode.bind(this);\n        this.updateKeywordIsSpecified = this.updateKeywordIsSpecified.bind(this);\n    }\n\n    componentDidMount() {\n        this.queryUpdate()\n    }\n\n    queryUpdate() {\n        if (this.state.sourceValue.length) {\n            if (this.state.dateSpecified && this.state.dateValue.length) {\n                let query = newsRef\n                    .where('source', 'in', this.state.sourceValue)\n                    .where('date', '>=', Number(this.state.dateValue[0]))\n                    .where('date', '<=', Number(this.state.dateValue[1]))\n                    .orderBy('date', 'desc')\n                this.submitQueryAndRetrieveNewsList(query)\n            } else {\n                let query = newsRef\n                    .where('source', 'in', this.state.sourceValue)\n                    .orderBy('date', 'desc')\n\n                this.submitQueryAndRetrieveNewsList(query)\n            }\n        } else {\n            let query = newsRef\n                .where('article', 'array-contains', 'Authority')\n\n            this.submitQueryAndRetrieveNewsList(query)\n        }\n    }\n\n    // ------------------- Keyword filtering -------------------\n    filterByKeyword(newsList) {\n        if (this.state.keywordIsSpecified) {\n            if (this.state.keywordValue.length) {\n                let filteredNewsList = []\n\n                newsList.forEach(news => {\n                    let textLow = news.title.toLowerCase() + ' ' + news.article.toLowerCase()\n                    let keywordList = []\n                    this.state.keywordValue.forEach(key => {\n                        if(key.match(/[\\u3400-\\u9FBF]/)){\n                            if (textLow.search(key) != -1) {\n                                // old search method, substring in string\n                                // use this method when chinese in keyword is recognized\n                                keywordList.push(key)\n                            }\n                        }else{\n                            // new search method, word in string\n                            if (findWord(key, textLow)) {\n                                keywordList.push(key)\n                            }\n                        }\n                    \n                    })\n\n                    if (this.state.keywordSearchMode == \"OR\") {\n                        // OR mode\n                        if (keywordList.length) {\n                            news['keywordList'] = keywordList\n                            filteredNewsList.push(news)\n                        }\n                    } else {\n                        // AND mode\n                        if (keywordList.length == this.state.keywordValue.length) {\n                            news['keywordList'] = keywordList\n                            filteredNewsList.push(news)\n                        }\n                    }\n                });\n\n                return filteredNewsList\n\n            } else {\n                console.log(\"No keyword selected\")\n                return []\n            }\n        } else {\n            console.log(\"No keyword filtering\")\n            return newsList\n        }\n\n    }\n    // ----------------------------------------------------\n\n    submitQueryAndRetrieveNewsList(query) {\n        this.setState({\n            newsIsLoading: true,\n        });\n\n        query.get()\n            .then(snapshot => {\n                var newsList = []\n                snapshot.forEach(doc => {\n                    newsList.push({\n                        'source': doc.data().source,\n                        'title': doc.data().title,\n                        'date': doc.data().dateStr,\n                        'article': doc.data().article,\n                        'link': doc.data().link,\n                    })\n                });\n\n                console.log(\"Retrieved news list.\")\n\n                newsList = this.filterByKeyword(newsList)\n\n                let processedList = {}\n\n                this.state.sourceValue.map((s, i) => {\n                    processedList[s] = []\n                })\n\n                newsList.map((n, i) => {\n                    processedList[n.source].push(n)\n                })\n\n                console.log(\"Processed news list.\")\n\n                this.setState({\n                    newsIsLoading: false,\n                    newsList: processedList\n                });\n            })\n            .catch(err => {\n                console.log('Error getting documents', err);\n\n                this.setState({\n                    newsIsLoading: false,\n                    newsList: []\n                });\n            });\n    }\n\n    updateSourceValue(value) {\n        this.setState({\n            sourceValue: value\n        }, () => { this.queryUpdate() });\n    }\n\n    updateDateValue(value, isSpecified) {\n        if (isSpecified) {\n            this.setState({\n                dateSpecified: isSpecified,\n                dateValue: value,\n            }, () => { this.queryUpdate() })\n        } else {\n            this.setState({\n                dateSpecified: isSpecified,\n                dateValue: value,\n            }, () => { this.queryUpdate() });\n        }\n    }\n\n    updateKeywordValue(value) {\n        this.setState({\n            keywordValue: value\n        }, () => { this.queryUpdate() });\n    }\n\n    updateKeywordMode(value) {\n        this.setState({\n            keywordSearchMode: value\n        }, () => { this.queryUpdate() });\n    }\n\n    updateKeywordIsSpecified(value) {\n        this.setState({\n            keywordIsSpecified: value\n        }, () => { this.queryUpdate() });\n    }\n\n    render() {\n\n        let { } = this.props;\n        const { } = this.state;\n\n        return (\n\n            <div className=\"main-div-wrapper\">\n\n                <Switch>\n\n                    <Route path=\"/admin\">\n\n                        <AdminTabWrapper\n                \n                        />\n\n                    </Route>\n\n                    <Route path=\"/subscribe\">\n                        <SubscribingTabWrapper\n                            sourceValue={this.state.sourceValue}\n                            sourceAllOptions={this.state.sourceAllOptions}\n\n                            keywordIsSpecified={this.state.keywordIsSpecified}\n                            keywordValue={this.state.keywordValue}\n                            keywordAllOptions={this.state.keywordAllOptions}\n                            db={db}\n                        />\n                    </Route>\n\n                    <Route path=\"/\">\n\n                        <HomeTabWrapper\n                            updateSourceValue={this.updateSourceValue}\n                            updateDateValue={this.updateDateValue}\n                            updateKeywordValue={this.updateKeywordValue}\n                            updateKeywordMode={this.updateKeywordMode}\n                            updateKeywordIsSpecified={this.updateKeywordIsSpecified}\n\n                            sourceValue={this.state.sourceValue}\n                            sourceAllOptions={this.state.sourceAllOptions}\n\n                            keywordIsSpecified={this.state.keywordIsSpecified}\n                            keywordValue={this.state.keywordValue}\n                            keywordAllOptions={this.state.keywordAllOptions}\n\n                            dateValue={this.state.dateValue}\n                            dateSpecified={this.state.dateSpecified}\n\n                            newsIsLoading={this.state.newsIsLoading}\n                            sourceLink={this.state.sourceLink}\n                            keywordSearchMode={this.state.keywordSearchMode}\n                            newsList={this.state.newsList}\n\n                        />\n\n                    </Route>\n\n                </Switch>\n\n\n            </div >\n        )\n\n    }\n}\n\nexport default MotherWrapper","import React, { Component } from 'react';\nimport logo from './database.png';\nimport './App.css';\nimport MotherWrapper from './components/Mother_Wrapper'\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nclass App extends Component {\n\n  render() {\n\n    return (\n      <div className=\"App\">\n\n        <script src=\"/__/firebase/7.11.0/firebase-app.js\"></script>\n        <script src=\"/__/firebase/7.11.0/firebase-analytics.js\"></script>\n        <script src=\"/__/firebase/init.js\"></script>\n        {/* <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/materialize/1.0.0/css/materialize.min.css\"/> */}\n        <script src=\"https://cdnjs.cloudflare.com/ajax/libs/materialize/1.0.0/js/materialize.min.js\"></script>\n\n        <div className=\"outermost-wrapper\">\n\n          <Router>\n\n            <div className=\"top-bar\">\n              <div className=\"top-bar-wrapper\">\n\n                <img src={logo} className=\"App-logo\" alt=\"logo\" />\n\n                <Link\n                  className=\"home-button\"\n                  to={{\n                    pathname: \"/\",\n                  }}>\n                  <p>FinTech Scraping</p>\n                </Link>\n\n                <Link\n                  className=\"subscribe-button\" \n                  to={{\n                    pathname: \"/subscribe\",\n                  }}>\n                  Subscribe\n                </Link>\n\n              </div>\n            </div>\n\n            <div className=\"main-div\">\n              <MotherWrapper />\n            </div>\n\n          </Router>\n\n        </div>\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}